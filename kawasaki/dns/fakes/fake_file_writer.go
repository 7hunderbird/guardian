// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/guardian/kawasaki/dns"
	"github.com/pivotal-golang/lager"
)

type FakeFileWriter struct {
	WriteFileStub        func(log lager.Logger, filePath string, contents []byte) error
	writeFileMutex       sync.RWMutex
	writeFileArgsForCall []struct {
		log      lager.Logger
		filePath string
		contents []byte
	}
	writeFileReturns struct {
		result1 error
	}
}

func (fake *FakeFileWriter) WriteFile(log lager.Logger, filePath string, contents []byte) error {
	fake.writeFileMutex.Lock()
	fake.writeFileArgsForCall = append(fake.writeFileArgsForCall, struct {
		log      lager.Logger
		filePath string
		contents []byte
	}{log, filePath, contents})
	fake.writeFileMutex.Unlock()
	if fake.WriteFileStub != nil {
		return fake.WriteFileStub(log, filePath, contents)
	} else {
		return fake.writeFileReturns.result1
	}
}

func (fake *FakeFileWriter) WriteFileCallCount() int {
	fake.writeFileMutex.RLock()
	defer fake.writeFileMutex.RUnlock()
	return len(fake.writeFileArgsForCall)
}

func (fake *FakeFileWriter) WriteFileArgsForCall(i int) (lager.Logger, string, []byte) {
	fake.writeFileMutex.RLock()
	defer fake.writeFileMutex.RUnlock()
	return fake.writeFileArgsForCall[i].log, fake.writeFileArgsForCall[i].filePath, fake.writeFileArgsForCall[i].contents
}

func (fake *FakeFileWriter) WriteFileReturns(result1 error) {
	fake.WriteFileStub = nil
	fake.writeFileReturns = struct {
		result1 error
	}{result1}
}

var _ dns.FileWriter = new(FakeFileWriter)
