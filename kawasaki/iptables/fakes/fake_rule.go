// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/guardian/kawasaki/iptables"
)

type FakeRule struct {
	FlagsStub        func(chain string) []string
	flagsMutex       sync.RWMutex
	flagsArgsForCall []struct {
		chain string
	}
	flagsReturns struct {
		result1 []string
	}
}

func (fake *FakeRule) Flags(chain string) []string {
	fake.flagsMutex.Lock()
	fake.flagsArgsForCall = append(fake.flagsArgsForCall, struct {
		chain string
	}{chain})
	fake.flagsMutex.Unlock()
	if fake.FlagsStub != nil {
		return fake.FlagsStub(chain)
	} else {
		return fake.flagsReturns.result1
	}
}

func (fake *FakeRule) FlagsCallCount() int {
	fake.flagsMutex.RLock()
	defer fake.flagsMutex.RUnlock()
	return len(fake.flagsArgsForCall)
}

func (fake *FakeRule) FlagsArgsForCall(i int) string {
	fake.flagsMutex.RLock()
	defer fake.flagsMutex.RUnlock()
	return fake.flagsArgsForCall[i].chain
}

func (fake *FakeRule) FlagsReturns(result1 []string) {
	fake.FlagsStub = nil
	fake.flagsReturns = struct {
		result1 []string
	}{result1}
}

var _ iptables.Rule = new(FakeRule)
