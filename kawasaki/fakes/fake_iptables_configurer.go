// This file was generated by counterfeiter
package fakes

import (
	"net"
	"sync"

	"github.com/cloudfoundry-incubator/guardian/kawasaki"
)

type FakeIPTablesConfigurer struct {
	ApplyStub        func(instanceChain, bridgeName string, ip net.IP, network *net.IPNet) error
	applyMutex       sync.RWMutex
	applyArgsForCall []struct {
		instanceChain string
		bridgeName    string
		ip            net.IP
		network       *net.IPNet
	}
	applyReturns struct {
		result1 error
	}
	DestroyStub        func(instanceChain string) error
	destroyMutex       sync.RWMutex
	destroyArgsForCall []struct {
		instanceChain string
	}
	destroyReturns struct {
		result1 error
	}
}

func (fake *FakeIPTablesConfigurer) Apply(instanceChain string, bridgeName string, ip net.IP, network *net.IPNet) error {
	fake.applyMutex.Lock()
	fake.applyArgsForCall = append(fake.applyArgsForCall, struct {
		instanceChain string
		bridgeName    string
		ip            net.IP
		network       *net.IPNet
	}{instanceChain, bridgeName, ip, network})
	fake.applyMutex.Unlock()
	if fake.ApplyStub != nil {
		return fake.ApplyStub(instanceChain, bridgeName, ip, network)
	} else {
		return fake.applyReturns.result1
	}
}

func (fake *FakeIPTablesConfigurer) ApplyCallCount() int {
	fake.applyMutex.RLock()
	defer fake.applyMutex.RUnlock()
	return len(fake.applyArgsForCall)
}

func (fake *FakeIPTablesConfigurer) ApplyArgsForCall(i int) (string, string, net.IP, *net.IPNet) {
	fake.applyMutex.RLock()
	defer fake.applyMutex.RUnlock()
	return fake.applyArgsForCall[i].instanceChain, fake.applyArgsForCall[i].bridgeName, fake.applyArgsForCall[i].ip, fake.applyArgsForCall[i].network
}

func (fake *FakeIPTablesConfigurer) ApplyReturns(result1 error) {
	fake.ApplyStub = nil
	fake.applyReturns = struct {
		result1 error
	}{result1}
}

func (fake *FakeIPTablesConfigurer) Destroy(instanceChain string) error {
	fake.destroyMutex.Lock()
	fake.destroyArgsForCall = append(fake.destroyArgsForCall, struct {
		instanceChain string
	}{instanceChain})
	fake.destroyMutex.Unlock()
	if fake.DestroyStub != nil {
		return fake.DestroyStub(instanceChain)
	} else {
		return fake.destroyReturns.result1
	}
}

func (fake *FakeIPTablesConfigurer) DestroyCallCount() int {
	fake.destroyMutex.RLock()
	defer fake.destroyMutex.RUnlock()
	return len(fake.destroyArgsForCall)
}

func (fake *FakeIPTablesConfigurer) DestroyArgsForCall(i int) string {
	fake.destroyMutex.RLock()
	defer fake.destroyMutex.RUnlock()
	return fake.destroyArgsForCall[i].instanceChain
}

func (fake *FakeIPTablesConfigurer) DestroyReturns(result1 error) {
	fake.DestroyStub = nil
	fake.destroyReturns = struct {
		result1 error
	}{result1}
}

var _ kawasaki.IPTablesConfigurer = new(FakeIPTablesConfigurer)
