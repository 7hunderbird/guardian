// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/guardian/kawasaki"
)

type FakeConfigStore struct {
	PutStub        func(handle string, cfg kawasaki.NetworkConfig)
	putMutex       sync.RWMutex
	putArgsForCall []struct {
		handle string
		cfg    kawasaki.NetworkConfig
	}
	GetStub        func(handle string) (kawasaki.NetworkConfig, error)
	getMutex       sync.RWMutex
	getArgsForCall []struct {
		handle string
	}
	getReturns struct {
		result1 kawasaki.NetworkConfig
		result2 error
	}
}

func (fake *FakeConfigStore) Put(handle string, cfg kawasaki.NetworkConfig) {
	fake.putMutex.Lock()
	fake.putArgsForCall = append(fake.putArgsForCall, struct {
		handle string
		cfg    kawasaki.NetworkConfig
	}{handle, cfg})
	fake.putMutex.Unlock()
	if fake.PutStub != nil {
		fake.PutStub(handle, cfg)
	}
}

func (fake *FakeConfigStore) PutCallCount() int {
	fake.putMutex.RLock()
	defer fake.putMutex.RUnlock()
	return len(fake.putArgsForCall)
}

func (fake *FakeConfigStore) PutArgsForCall(i int) (string, kawasaki.NetworkConfig) {
	fake.putMutex.RLock()
	defer fake.putMutex.RUnlock()
	return fake.putArgsForCall[i].handle, fake.putArgsForCall[i].cfg
}

func (fake *FakeConfigStore) Get(handle string) (kawasaki.NetworkConfig, error) {
	fake.getMutex.Lock()
	fake.getArgsForCall = append(fake.getArgsForCall, struct {
		handle string
	}{handle})
	fake.getMutex.Unlock()
	if fake.GetStub != nil {
		return fake.GetStub(handle)
	} else {
		return fake.getReturns.result1, fake.getReturns.result2
	}
}

func (fake *FakeConfigStore) GetCallCount() int {
	fake.getMutex.RLock()
	defer fake.getMutex.RUnlock()
	return len(fake.getArgsForCall)
}

func (fake *FakeConfigStore) GetArgsForCall(i int) string {
	fake.getMutex.RLock()
	defer fake.getMutex.RUnlock()
	return fake.getArgsForCall[i].handle
}

func (fake *FakeConfigStore) GetReturns(result1 kawasaki.NetworkConfig, result2 error) {
	fake.GetStub = nil
	fake.getReturns = struct {
		result1 kawasaki.NetworkConfig
		result2 error
	}{result1, result2}
}

var _ kawasaki.ConfigStore = new(FakeConfigStore)
