// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/guardian/gardener"
	"github.com/pivotal-golang/lager"
)

type FakeRestorer struct {
	RestoreStub        func(logger lager.Logger, handles []string) []string
	restoreMutex       sync.RWMutex
	restoreArgsForCall []struct {
		logger  lager.Logger
		handles []string
	}
	restoreReturns struct {
		result1 []string
	}
}

func (fake *FakeRestorer) Restore(logger lager.Logger, handles []string) []string {
	fake.restoreMutex.Lock()
	fake.restoreArgsForCall = append(fake.restoreArgsForCall, struct {
		logger  lager.Logger
		handles []string
	}{logger, handles})
	fake.restoreMutex.Unlock()
	if fake.RestoreStub != nil {
		return fake.RestoreStub(logger, handles)
	} else {
		return fake.restoreReturns.result1
	}
}

func (fake *FakeRestorer) RestoreCallCount() int {
	fake.restoreMutex.RLock()
	defer fake.restoreMutex.RUnlock()
	return len(fake.restoreArgsForCall)
}

func (fake *FakeRestorer) RestoreArgsForCall(i int) (lager.Logger, []string) {
	fake.restoreMutex.RLock()
	defer fake.restoreMutex.RUnlock()
	return fake.restoreArgsForCall[i].logger, fake.restoreArgsForCall[i].handles
}

func (fake *FakeRestorer) RestoreReturns(result1 []string) {
	fake.RestoreStub = nil
	fake.restoreReturns = struct {
		result1 []string
	}{result1}
}

var _ gardener.Restorer = new(FakeRestorer)
