// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/garden-shed/rootfs_provider"
	"github.com/cloudfoundry-incubator/guardian/gardener"
)

type FakeVolumeCreator struct {
	CreateStub        func(handle string, spec rootfs_provider.Spec) (string, []string, error)
	createMutex       sync.RWMutex
	createArgsForCall []struct {
		handle string
		spec   rootfs_provider.Spec
	}
	createReturns struct {
		result1 string
		result2 []string
		result3 error
	}
}

func (fake *FakeVolumeCreator) Create(handle string, spec rootfs_provider.Spec) (string, []string, error) {
	fake.createMutex.Lock()
	fake.createArgsForCall = append(fake.createArgsForCall, struct {
		handle string
		spec   rootfs_provider.Spec
	}{handle, spec})
	fake.createMutex.Unlock()
	if fake.CreateStub != nil {
		return fake.CreateStub(handle, spec)
	} else {
		return fake.createReturns.result1, fake.createReturns.result2, fake.createReturns.result3
	}
}

func (fake *FakeVolumeCreator) CreateCallCount() int {
	fake.createMutex.RLock()
	defer fake.createMutex.RUnlock()
	return len(fake.createArgsForCall)
}

func (fake *FakeVolumeCreator) CreateArgsForCall(i int) (string, rootfs_provider.Spec) {
	fake.createMutex.RLock()
	defer fake.createMutex.RUnlock()
	return fake.createArgsForCall[i].handle, fake.createArgsForCall[i].spec
}

func (fake *FakeVolumeCreator) CreateReturns(result1 string, result2 []string, result3 error) {
	fake.CreateStub = nil
	fake.createReturns = struct {
		result1 string
		result2 []string
		result3 error
	}{result1, result2, result3}
}

var _ gardener.VolumeCreator = new(FakeVolumeCreator)
