// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/guardian/gardener"
)

type FakeContainerizer struct {
	CreateStub        func(spec gardener.DesiredContainerSpec) error
	createMutex       sync.RWMutex
	createArgsForCall []struct {
		spec gardener.DesiredContainerSpec
	}
	createReturns struct {
		result1 error
	}
}

func (fake *FakeContainerizer) Create(spec gardener.DesiredContainerSpec) error {
	fake.createMutex.Lock()
	fake.createArgsForCall = append(fake.createArgsForCall, struct {
		spec gardener.DesiredContainerSpec
	}{spec})
	fake.createMutex.Unlock()
	if fake.CreateStub != nil {
		return fake.CreateStub(spec)
	} else {
		return fake.createReturns.result1
	}
}

func (fake *FakeContainerizer) CreateCallCount() int {
	fake.createMutex.RLock()
	defer fake.createMutex.RUnlock()
	return len(fake.createArgsForCall)
}

func (fake *FakeContainerizer) CreateArgsForCall(i int) gardener.DesiredContainerSpec {
	fake.createMutex.RLock()
	defer fake.createMutex.RUnlock()
	return fake.createArgsForCall[i].spec
}

func (fake *FakeContainerizer) CreateReturns(result1 error) {
	fake.CreateStub = nil
	fake.createReturns = struct {
		result1 error
	}{result1}
}

var _ gardener.Containerizer = new(FakeContainerizer)
