// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/guardian/rundmc/runrunc"
	"github.com/opencontainers/runc/libcontainer/user"
)

type FakePasswdFileParserObject struct {
	ParsePasswdFileStub        func(passwdPath string) ([]user.User, error)
	parsePasswdFileMutex       sync.RWMutex
	parsePasswdFileArgsForCall []struct {
		passwdPath string
	}
	parsePasswdFileReturns struct {
		result1 []user.User
		result2 error
	}
}

func (fake *FakePasswdFileParserObject) ParsePasswdFile(passwdPath string) ([]user.User, error) {
	fake.parsePasswdFileMutex.Lock()
	fake.parsePasswdFileArgsForCall = append(fake.parsePasswdFileArgsForCall, struct {
		passwdPath string
	}{passwdPath})
	fake.parsePasswdFileMutex.Unlock()
	if fake.ParsePasswdFileStub != nil {
		return fake.ParsePasswdFileStub(passwdPath)
	} else {
		return fake.parsePasswdFileReturns.result1, fake.parsePasswdFileReturns.result2
	}
}

func (fake *FakePasswdFileParserObject) ParsePasswdFileCallCount() int {
	fake.parsePasswdFileMutex.RLock()
	defer fake.parsePasswdFileMutex.RUnlock()
	return len(fake.parsePasswdFileArgsForCall)
}

func (fake *FakePasswdFileParserObject) ParsePasswdFileArgsForCall(i int) string {
	fake.parsePasswdFileMutex.RLock()
	defer fake.parsePasswdFileMutex.RUnlock()
	return fake.parsePasswdFileArgsForCall[i].passwdPath
}

func (fake *FakePasswdFileParserObject) ParsePasswdFileReturns(result1 []user.User, result2 error) {
	fake.ParsePasswdFileStub = nil
	fake.parsePasswdFileReturns = struct {
		result1 []user.User
		result2 error
	}{result1, result2}
}

var _ runrunc.PasswdFileParserObject = new(FakePasswdFileParserObject)
