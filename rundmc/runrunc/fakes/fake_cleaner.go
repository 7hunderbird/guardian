// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/guardian/rundmc/runrunc"
	"github.com/pivotal-golang/lager"
)

type FakeCleaner struct {
	CleanStub        func(log lager.Logger, process runrunc.Waiter, path string)
	cleanMutex       sync.RWMutex
	cleanArgsForCall []struct {
		log     lager.Logger
		process runrunc.Waiter
		path    string
	}
}

func (fake *FakeCleaner) Clean(log lager.Logger, process runrunc.Waiter, path string) {
	fake.cleanMutex.Lock()
	fake.cleanArgsForCall = append(fake.cleanArgsForCall, struct {
		log     lager.Logger
		process runrunc.Waiter
		path    string
	}{log, process, path})
	fake.cleanMutex.Unlock()
	if fake.CleanStub != nil {
		fake.CleanStub(log, process, path)
	}
}

func (fake *FakeCleaner) CleanCallCount() int {
	fake.cleanMutex.RLock()
	defer fake.cleanMutex.RUnlock()
	return len(fake.cleanArgsForCall)
}

func (fake *FakeCleaner) CleanArgsForCall(i int) (lager.Logger, runrunc.Waiter, string) {
	fake.cleanMutex.RLock()
	defer fake.cleanMutex.RUnlock()
	return fake.cleanArgsForCall[i].log, fake.cleanArgsForCall[i].process, fake.cleanArgsForCall[i].path
}

var _ runrunc.Cleaner = new(FakeCleaner)
