// This file was generated by counterfeiter
package fakes

import (
	"io"
	"sync"

	"github.com/cloudfoundry-incubator/guardian/rundmc"
	"github.com/pivotal-golang/lager"
)

type FakeChecker struct {
	CheckStub        func(log lager.Logger, output io.Reader) error
	checkMutex       sync.RWMutex
	checkArgsForCall []struct {
		log    lager.Logger
		output io.Reader
	}
	checkReturns struct {
		result1 error
	}
}

func (fake *FakeChecker) Check(log lager.Logger, output io.Reader) error {
	fake.checkMutex.Lock()
	fake.checkArgsForCall = append(fake.checkArgsForCall, struct {
		log    lager.Logger
		output io.Reader
	}{log, output})
	fake.checkMutex.Unlock()
	if fake.CheckStub != nil {
		return fake.CheckStub(log, output)
	} else {
		return fake.checkReturns.result1
	}
}

func (fake *FakeChecker) CheckCallCount() int {
	fake.checkMutex.RLock()
	defer fake.checkMutex.RUnlock()
	return len(fake.checkArgsForCall)
}

func (fake *FakeChecker) CheckArgsForCall(i int) (lager.Logger, io.Reader) {
	fake.checkMutex.RLock()
	defer fake.checkMutex.RUnlock()
	return fake.checkArgsForCall[i].log, fake.checkArgsForCall[i].output
}

func (fake *FakeChecker) CheckReturns(result1 error) {
	fake.CheckStub = nil
	fake.checkReturns = struct {
		result1 error
	}{result1}
}

var _ rundmc.Checker = new(FakeChecker)
