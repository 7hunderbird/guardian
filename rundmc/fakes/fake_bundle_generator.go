// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/goci"
	"github.com/cloudfoundry-incubator/guardian/gardener"
	"github.com/cloudfoundry-incubator/guardian/rundmc"
)

type FakeBundleGenerator struct {
	GenerateStub        func(spec gardener.DesiredContainerSpec) goci.Bndl
	generateMutex       sync.RWMutex
	generateArgsForCall []struct {
		spec gardener.DesiredContainerSpec
	}
	generateReturns struct {
		result1 goci.Bndl
	}
}

func (fake *FakeBundleGenerator) Generate(spec gardener.DesiredContainerSpec) goci.Bndl {
	fake.generateMutex.Lock()
	fake.generateArgsForCall = append(fake.generateArgsForCall, struct {
		spec gardener.DesiredContainerSpec
	}{spec})
	fake.generateMutex.Unlock()
	if fake.GenerateStub != nil {
		return fake.GenerateStub(spec)
	} else {
		return fake.generateReturns.result1
	}
}

func (fake *FakeBundleGenerator) GenerateCallCount() int {
	fake.generateMutex.RLock()
	defer fake.generateMutex.RUnlock()
	return len(fake.generateArgsForCall)
}

func (fake *FakeBundleGenerator) GenerateArgsForCall(i int) gardener.DesiredContainerSpec {
	fake.generateMutex.RLock()
	defer fake.generateMutex.RUnlock()
	return fake.generateArgsForCall[i].spec
}

func (fake *FakeBundleGenerator) GenerateReturns(result1 goci.Bndl) {
	fake.GenerateStub = nil
	fake.generateReturns = struct {
		result1 goci.Bndl
	}{result1}
}

var _ rundmc.BundleGenerator = new(FakeBundleGenerator)
